---
export const prerender = true;

import { getCollection } from 'astro:content';

import Wide from '@l/Wide.astro';
import WideLeftLogo from '@l/blocks/WideLeftLogo.astro';
import BigHeader from '@l/blocks/BigHeader.astro';
import Article from '@md/Article.astro';
import BlogData from '@c/meta/BlogData.astro';
import Frontmatter from '@md/Frontmatter.astro';
import RecentPosts from '@md/RecentPosts.astro';

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');
    return blogEntries
        .filter((entry) => entry.data.status === 'published' || import.meta.env.DEV)
        .map((entry) => ({
            params: { slug: entry.slug },
            props: { entry },
        }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const title = `JSM | ${entry.data.title}`;
---

<Wide title={title}>
    <BlogData slot="head" {...entry.data} />
    <WideLeftLogo>
        <div class="top-0 grid grid-cols-1 justify-items-center lg:sticky">
            <BigHeader class="ml-auto w-fit lg:min-w-[24rem]" />
            <Frontmatter post={entry} />
            <RecentPosts />
        </div>
        <div
            class="grid
            max-w-5xl
            grid-cols-1
            justify-stretch
            justify-items-center
            gap-4
            p-2
            unfolded:p-4
            xl:grid-cols-2"
        >
            <Article>
                <Content />
            </Article>
        </div>
    </WideLeftLogo>
</Wide>
