---
export const prerender = true;

import { getCollection } from 'astro:content';

import Wide from '@l/Wide.astro';
import WideLeftLogo from '@l/mixins/WideLeftLogo.astro';
import BigHeader from '@c/blocks/BigHeader.astro';
import Article from '@md/Article.astro';
import BlogData from '@md/BlogData.astro';
import Frontmatter from '@md/Frontmatter.astro'

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');
    return blogEntries
        // TODO: Parameterize properly with environment variables.
        .filter( (entry) => (entry.data.status === "published" || import.meta.env.DEV))
        .map( (entry) => ({
            params: { slug: entry.slug },
            props: { entry },
        }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const title = `JSM | ${entry.data.title}`;
---
<Wide title={title}>
    <BlogData slot="head" {...entry.data}/>
    <WideLeftLogo>
        <div class="lg:sticky top-0 grid grid-cols-1 justify-items-center ">
            <BigHeader class="w-fit ml-auto lg:min-w-[24rem]"/>
            <Frontmatter post={entry}/>
        </div>
        <div class="
            max-w-5xl
            grid
            grid-cols-1
            gap-4
            xl:grid-cols-2
            justify-stretch
            justify-items-center
            p-2
            unfolded:p-4
        ">
            <Article>
                <Content/>
            </Article>
        </div>
    </WideLeftLogo>
</Wide>